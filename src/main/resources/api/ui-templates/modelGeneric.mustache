{{#hasImports}}

    {{#imports}}
        import { {{{.}}} } from './{{{.}}}';
    {{/imports}}

{{/hasImports}}
/**
* {{{description}}}
* @export
* @interface {{classname}}
*/
export interface {{classname}} {{#allParents.0}}extends{{#allParents}} {{{.}}}{{^-last}},{{/-last}}{{/allParents}}{{/allParents.0}} {
{{#additionalPropertiesType}}
    [key: string]: {{{additionalPropertiesType}}}{{#hasVars}} | any{{/hasVars}};
{{/additionalPropertiesType}}
{{#vars}}
    /**
    * {{{description}}}
    * @type {{=<% %>=}}{<%&datatype%>}<%={{ }}=%>
    * @memberof {{classname}}
    */
    {{#isReadOnly}}readonly {{/isReadOnly}}{{name}}{{^required}}?{{/required}}: {{#vendorExtensions.x-extensible-enum}}{{#-first}}{{nameInCamelCase}}Enum{{/-first}}{{/vendorExtensions.x-extensible-enum}}{{^vendorExtensions.x-extensible-enum}}{{#isEnum}}{{{datatypeWithEnum}}}{{/isEnum}}{{^isEnum}}{{{datatype}}}{{/isEnum}}{{/vendorExtensions.x-extensible-enum}}{{#isNullable}} | null{{/isNullable}};
{{/vars}}
}

{{#hasEnums}}
    {{#vars}}
        {{#isEnum}}
            /**
            * @export
            * @enum {string}
            */
            export enum {{classname}}{{enumName}} {
            {{#allowableValues}}
                {{#enumVars}}
                    {{{name}}} = {{{value}}}{{^-last}},{{/-last}}
                {{/enumVars}}
            {{/allowableValues}}
            }
        {{/isEnum}}
        {{#vendorExtensions}}
            {{>modelExtendedEnum}}
        {{/vendorExtensions}}{{/vars}}
    {{^stringEnums}}
    {{/stringEnums}}
{{/hasEnums}}
{{^hasEnums}}
    {{^parent}}

    {{/parent}}
    {{#vars}}
        {{#vendorExtensions}}
            {{>modelExtendedEnum}}
        {{/vendorExtensions}}
    {{/vars}}
    {{^parent}}

    {{/parent}}
{{/hasEnums}}
